# ============================ 내 코드 ==============================

n = int(input()) # 모험가 수
group = 0 # 그룹의 수
count = 0 # 그룹의 모험가 수

m = list(map(int, input().split())) # 모험가들의 공포도
m.sort() # 공포도 오름차순 정렬

for i in m:
    count += 1
    if (count >= i):
        group += 1
        count = 0

print(group)

# ============================ 정답 코드 ============================

n = int(input())
data = list(map(int, input().split()))
data.sort()

result = 0 # 총 그룹의 수
count = 0 # 현재 그룹에 포함된 모험가의 수

for i in data: # 공포도를 낮은 것부터 하나씩 확인하며
    count += 1 # 현재 그룹에 해당 모험가를 포함시키기
    if count >= i: # 현재 그룹에 포함된 모험가의 수가 현재의 공포도 이상이라면, 그룹 결성
        result += 1 # 총 그룹의 수 증가시키기
        count = 0 # 현재 그룹에 포함된 모험가의 수 초기화

print(result) # 총 그룹의 수 출력

# ============================ 해설 =================================

# 1. 가장 많은 그룹을 많들기 위해 모험가의 공포도를 오름차순 정렬
# 2. for 반복문을 사용하여 리스트를 하나씩 받고 count를 추가
# 3. 만약 리스트의 숫자보다 리스트의 i가 같거나 크면 그룹 카운트를 1증가 
# 3. 다시 카운트는 0으로 초기화